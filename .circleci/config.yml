version: 2

jobs:
  prepare:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - restore_cache:
          key: npm-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: npm-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - save_cache:
          key: $CIRCLE_SHA1
          paths:
            - .
      - run: npm run lint

  lint:
    docker:
      - image: circleci/node:8
    steps:
      - restore_cache:
          key: $CIRCLE_SHA1
      - run: npm run lint

  test:
    docker:
      - image: circleci/node:8
        environment:
          - PGHOST: 127.0.0.1
          - PGUSER: postgres
      - image: circleci/postgres:9
        environment:
          - POSTGRES_USER: postgres
          - POSTGRES_DB: postgres
    steps:
      - restore_cache:
          key: $CIRCLE_SHA1
      - run: sleep 5
      - run: npm test

  publish:
    docker:
      - image: circleci/node:8
    steps:
      - restore_cache:
          key: $CIRCLE_SHA1
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run: npm publish

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - prepare:
          context: npm-authorized
      - lint:
          requires:
            - prepare
      - test:
          requires:
            - prepare
      - publish:
          context: npm-authorized
          requires:
            - lint
            - test
            - prepare
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
